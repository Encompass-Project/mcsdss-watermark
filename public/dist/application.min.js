"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mcsdss",applicationModuleDependenciesCustom=["mcsdss.directives","mcsdss.providers"],applicationModuleDependenciesVendor=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","nemLogging","ngPapaParse","ngTable","angularFileUpload"],applicationModuleDependencies=applicationModuleDependenciesVendor.concat(applicationModuleDependenciesCustom),registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleDependencies:applicationModuleDependencies,registerModule:registerModule}}();!function(orig){angular.modules=[],angular.module=function(){return arguments.length>1&&angular.modules.push(arguments[0]),orig.apply(null,arguments)}}(angular.module),angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),function(){ApplicationConfiguration.registerModule("analyze")}(),function(){ApplicationConfiguration.registerModule("core")}(),function(){ApplicationConfiguration.registerModule("dashboard")}(),function(){ApplicationConfiguration.registerModule("datasets")}(),function(){ApplicationConfiguration.registerModule("mcsdss.directives")}(),function(){ApplicationConfiguration.registerModule("documentation")}(),function(){ApplicationConfiguration.registerModule("formulations")}(),function(){ApplicationConfiguration.registerModule("information")}(),function(){ApplicationConfiguration.registerModule("models")}(),function(){ApplicationConfiguration.registerModule("mcsdss.providers")}(),function(){ApplicationConfiguration.registerModule("publications")}(),function(){ApplicationConfiguration.registerModule("users")}(),function(){function DashboardRoutes($stateProvider){var analyze_state={"abstract":!0,url:"",templateUrl:"modules/analyze/views/analyze.client.view.html",controller:"AnalyzeViewController",controllerAs:"analyze",data:{title:"Analyze"},resolve:{analysisData:function(FormulationRetrieval){return FormulationRetrieval.getFormulation("./data/formulations/bs.formulation.json")},analysisConfig:function(FormulationRetrieval,analysisData){return FormulationRetrieval.getAnalysisConfig(analysisData)},maufConfig:function(FormulationRetrieval,analysisData){return FormulationRetrieval.getMaufConfig(analysisData)},datagridConfig:function(FormulationRetrieval,analysisData){return FormulationRetrieval.getDatagridConfig(analysisData)},graphConfig:function(FormulationRetrieval,analysisData){return FormulationRetrieval.getGraphConfig(analysisData)},mapConfig:function(FormulationRetrieval,analysisData){return FormulationRetrieval.getMapConfig(analysisData)}}},analyze_layout_state={"abstract":!1,url:"/analyze",views:{graph:{templateUrl:"modules/analyze/views/analyze.graph.client.view.html",controller:"GraphViewController"},map:{templateUrl:"modules/analyze/views/analyze.map.client.view.html",controller:"MapViewController"},filters:{templateUrl:"modules/analyze/views/analyze.filters.client.view.html",controller:"FiltersViewController",controllerAs:"filters"},datatable:{templateUrl:"modules/analyze/views/analyze.datatable.client.view.html",controller:"DatatableViewController",controllerAs:"datatable"}}};$stateProvider.state("analyze",analyze_state).state("analyze.layout",analyze_layout_state)}angular.module("analyze").config(DashboardRoutes),DashboardRoutes.$inject=["$stateProvider"]}(),function(){function AnalyzeViewController($rootScope,$scope,$state,$location,Authentication,$httpq,analysisData,analysisConfig){$scope.authentication=Authentication,$scope.currentRoute="Analyze",$scope.$on("$stateChangeSuccess",function(){var d=new Date;$scope.analysisData=analysisData,$scope.analysisConfig=analysisConfig;d.getTime();$scope.$broadcast("analysisDataLoaded",$scope.analysisData.datagridConfig.datasources.tabledata.datum)}),$scope.$on("CurrentDatasetUpdated",function(event,args){$rootScope.$broadcast("newDatasetSelected",args)}),$scope.$on("SUFWeightDim1Update",function(event,args){$rootScope.$broadcast("newSUF1Weight",args)}),$scope.$on("SUFWeightDim2Update",function(event,args){$rootScope.$broadcast("newSUF2Weight",args)}),$scope.$on("SUFWeightDim3Update",function(event,args){$rootScope.$broadcast("newSUF3Weight",args)}),$scope.$on("MUFWeightUpdate",function(event,args){$rootScope.$broadcast("newMUFWeight",args)}),$scope.$on("currentDatatableTarget",function(event,args){$rootScope.$broadcast("newDatatableTarget",args[0])}),$scope.$on("clearDatatableTarget",function(event,args){$rootScope.$broadcast("removeDatatableTarget",args[0])}),$scope.$on("currentGraphTarget",function(event,args){$rootScope.$broadcast("addMapTarget",args)}),$scope.$on("clearGraphTarget",function(event,args){$rootScope.$broadcast("removeMapTarget",args)})}angular.module("analyze").controller("AnalyzeViewController",AnalyzeViewController),AnalyzeViewController.$inject=["$rootScope","$scope","$state","$location","Authentication","httpq","analysisData","analysisConfig"]}(),function(){function DatatableViewController($scope,Authentication,$filter,ngTableParams,AnalysisDataFactory,datagridConfig,graphConfig){function headerFilter(target){return target.visible}function datasetOrder(key){return angular.forEach($scope.headers,function(target){return target.data===key&&target.visible?target.order:void 0}),-1}function rowClicked(target){console.log(event);for(var key in target)target.hasOwnProperty(key)&&console.log(key+" -> "+target[key])}function decorateSiblings(target){$scope.$emit("currentDatatableTarget",target)}function clearSiblings(target){$scope.$emit("clearDatatableTarget",target)}function updateView(data){$scope.dataTable=new ngTableParams({page:1,count:10},{filterDelay:0,total:$scope.tabledata.length,counts:[10,50,100,250,500,1e3],defaultSort:"asc",data:this.getData,getData:function($defer,params){$scope.data=params.sorting()?$filter("orderBy")($scope.tabledata,params.orderBy()):$scope.tabledata,$scope.data=params.filter()?$filter("filter")(data,params.filter()):data,$scope.data=data.slice((params.page()-1)*params.count(),params.page()*params.count()),$defer.resolve($scope.data)}})}function updateSelectedDataset(target){console.log("New Dataset for Weighitng: ",target),$scope.weightedDataset=target,$scope.currentDimension="All"}function updateDimensionWeight(dimension,dimensionWeight){console.log("Datable updated with new Dimension & Value: ",dimension,dimensionWeight),console.log("Current Dataset:",$scope.weightedDataset),$scope.currentDimension=dimension,console.log($scope.currentDimension),$scope.tabledata.forEach(function(d,i){$scope.updateCurrentDatasetValues(d)}),$scope.updateUtilityScores()}function updateCurrentDatasetValues(d){"Original"==$scope.weightedDataset?(console.log("Original Dataset"),console.log("Dataset: ",d[0],d[1],d[3],d[4],d[6],d[7],d[9]),updateDimensionScore(d)):"Modified"==$scope.weightedDataset&&(console.log("Modified Dataset"),console.log("Dataset: ",d[0],d[2],d[3],d[5],d[6],d[8],d[9]),updateDimensionScore(d))}function updateDimensionScore(d){switch($scope.currentDimension){case"SUF1":$scope.currentDimension="SUF1",console.log("Current Dimension: ",$scope.currentDimension),console.log(d[1],$scope.suf01Weight);var newDimensionValue=d[1]*$scope.suf01Weight;console.log(newDimensionValue),$scope.suf01=newDimensionValue,$scope.$apply();break;case"SUF2":$scope.currentDimension="SUF2",console.log("Current Dimension: ",$scope.currentDimension),console.log(d[4],$scope.suf02Weight);var newDimensionValue=d[4]*$scope.suf02Weight;console.log(newDimensionValue),$scope.suf02=newDimensionValue,$scope.$apply();break;case"SUF3":$scope.currentDimension="SUF3",console.log("Current Dimension: ",$scope.currentDimension),console.log(d[7],$scope.suf03Weight);var newDimensionValue=d[7]*$scope.suf03Weight;console.log(newDimensionValue),$scope.suf03=newDimensionValue,$scope.$apply()}}function updateUtilityScores(){console.log("Datatable updating MUF Scores.");var currentMuf=$scope.suf01+$scope.suf02+$scope.suf03;$scope.muf=currentMuf}$scope.authentication=Authentication,$scope.headerFilter=headerFilter,$scope.datasetOrder=datasetOrder,$scope.rowClicked=rowClicked,$scope.decorateSiblings=decorateSiblings,$scope.clearSiblings=clearSiblings,$scope.updateView=updateView,$scope.updateSelectedDataset=updateSelectedDataset,$scope.updateDimensionWeight=updateDimensionWeight,$scope.updateCurrentDatasetValues=updateCurrentDatasetValues,$scope.updateDimensionScore=updateDimensionScore,$scope.updateUtilityScores=updateUtilityScores,$scope.weightedDataset="Original",$scope.currentDimension="All",$scope.suf01Weight=50,$scope.suf02Weight=50,$scope.suf03Weight=50,$scope.mufRange=[0,100],$scope.suf01=0,$scope.suf02=0,$scope.suf03=0,$scope.muf=0,$scope.$on("analysisDataLoaded",function(event,args){$scope.datagridConfig=datagridConfig,$scope.tabledata=$scope.datagridConfig.datasources.tabledata.datum,$scope.updateView($scope.tabledata)}),$scope.$on("newDatasetSelected",function(event,args){console.log("Selected Dataset Updated."),console.log("Current Selected Dataset: ",args),updateSelectedDataset(args)}),$scope.$on("newSUF1Weight",function(event,args){console.log("newSUF1Weight event received by DatatableViewCTRL.",args),$scope.suf01Weight=args,updateDimensionWeight("SUF1",args)}),$scope.$on("newSUF2Weight",function(event,args){console.log("newSUF2Weight event received by DatatableViewCTRL.",args),$scope.suf02Weight=args,updateDimensionWeight("SUF2",args)}),$scope.$on("newSUF3Weight",function(event,args){console.log("newSUF3Weight event received by DatatableViewCTRL.",args),$scope.suf03Weight=args,updateDimensionWeight("SUF3",args)}),$scope.$on("newMUFWeight",function(event,args){console.log("newMUFWeight event received by DatatableViewCTRL.",args),$scope.updateUtilityScores()})}angular.module("analyze").controller("DatatableViewController",DatatableViewController),DatatableViewController.$inject=["$scope","Authentication","$filter","ngTableParams","AnalysisDataFactory","datagridConfig","graphConfig"]}(),function(){function FiltersViewController($scope,Authentication,maufConfig){function updateView(data){}function setCurrentDataset(){console.log("Dataset changed to: ",$scope.selected_status),$scope.$emit("CurrentDatasetUpdated",$scope.selected_status)}function suf1UpdateDisplay(weight){document.getElementById("suf-weight-dim1-value").value=weight}function suf2UpdateDisplay(weight){document.getElementById("suf-weight-dim2-value").value=weight}function suf3UpdateDisplay(weight){document.getElementById("suf-weight-dim3-value").value=weight}function mufUpdateDisplay(weight){0==weight?document.getElementById("muf-weight-value").value=weight+" (minimal utility)":1==weight?document.getElementById("muf-weight-value").value=weight+" (maximal utility)":document.getElementById("muf-weight-value").value=weight}function suf1EmitChange(weight){$scope.$emit("SUFWeightDim1Update",weight)}function suf2EmitChange(weight){$scope.$emit("SUFWeightDim2Update",weight)}function suf3EmitChange(weight){$scope.$emit("SUFWeightDim3Update",weight)}function mufEmitChange(weight){$scope.$emit("MUFWeightUpdate",weight)}$scope.authentication=Authentication,$scope.updateView=updateView,$scope.setCurrentDataset=setCurrentDataset,$scope.suf1UpdateDisplay=suf1UpdateDisplay,$scope.suf2UpdateDisplay=suf2UpdateDisplay,$scope.suf3UpdateDisplay=suf3UpdateDisplay,$scope.mufUpdateDisplay=mufUpdateDisplay,$scope.suf1EmitChange=suf1EmitChange,$scope.suf2EmitChange=suf2EmitChange,$scope.suf3EmitChange=suf3EmitChange,$scope.mufEmitChange=mufEmitChange,$scope.$on("analysisDataLoaded",function(event,args){$scope.maufConfig=maufConfig}),$scope.statuses=[{id:1,name:"Original"},{id:2,name:"Modified"}],$scope.selected_status=1,document.getElementById("suf-weight-dim1").oninput=function(){suf1UpdateDisplay(this.value)},document.getElementById("suf-weight-dim2").oninput=function(){suf2UpdateDisplay(this.value)},document.getElementById("suf-weight-dim3").oninput=function(){suf3UpdateDisplay(this.value)},document.getElementById("muf-weight").oninput=function(){mufUpdateDisplay(this.value)},document.getElementById("suf-weight-dim1").onchange=function(){suf1EmitChange(this.value)},document.getElementById("suf-weight-dim2").onchange=function(){suf2EmitChange(this.value)},document.getElementById("suf-weight-dim3").onchange=function(){suf3EmitChange(this.value)},document.getElementById("muf-weight").onchange=function(){mufEmitChange(this.value)}}angular.module("analyze").controller("FiltersViewController",FiltersViewController),FiltersViewController.$inject=["$scope","Authentication","maufConfig"]}(),function(){function GraphViewController($rootScope,$scope,$state,$location,Authentication,graphConfig){$scope.authentication=Authentication,$scope.graphTitle="Identifying Desired Future Conditions (DFCs)",$scope.$on("analysisDataLoaded",function(event,args){var d=new Date;$scope.graphConfig=graphConfig;d.getTime();$scope.graphdata=args;d.getTime();$scope.graphdata2=$scope.graphConfig.datasources.graphdata.datum,$scope.updateView($scope.graphdata)}),$scope.updateView=function(data){var d=new Date;d.getTime();$scope.visualization(data)},$scope.visualization=function(data){function drawGraph(graphData){var dotRadius=2,dotStrokeWidth=1,dotStrokeColor="#111",dotColorOriginal="#CD6AD4",dotColorModified="#8AE5F2",dotActiveRadius=13,dotColorActive="rgba(233,174,12,0.7)",dotActiveStrokeWidth=7,dotActiveStrokeColor="rgba(0,0,0,0.5)",correlateRuns=[],correlateRunsTextColor="#ffffff",continuumStrokeWidth=1,continuumStrokeColor="rgba(113,178,201,0.7)",continuumTextFill="#ddd",xScaleDomain_Lower=Math.pow(10,9),xScaleDomain_Upper=Math.pow(10,9.85),yScaleDomain_Lower=770,yScaleDomain_Upper=792,animationDuration=150,tooltipPosX=10,tooltipPosY=30,cfsDenominator=31536e4,decimalLimit=5,xScale=d3.scale.linear().range([0,width]),xAxis=d3.svg.axis().scale(xScale).orient("bottom").ticks(10,"e"),yScale=d3.scale.linear().range([height,0]),yAxis=d3.svg.axis().scale(yScale).orient("left").ticks(10,"s"),xValue_O=function(d){return d.value_O},xMap_O=function(d){return xScale(xValue_O(d))},yValue_O=function(d){return d.value_O_heads},yMap_O=function(d){return yScale(yValue_O(d))},xValue_M=function(d){return d.value_M},xMap_M=function(d){return xScale(xValue_M(d))},yValue_M=function(d){return d.value_O_heads},yMap_M=function(d){return yScale(yValue_M(d))},xValue_A=function(d){return d.Graph_Value},xMap_A=function(d){return xScale(xValue_A(d))},canvas=d3.select("#graph").append("svg:svg").attr("id","graphSVG").attr("width",width).attr("height",height);d3.selection.prototype.moveToFront=function(){return this.each(function(){this.parentNode.appendChild(this)})},d3.selection.prototype.moveToBack=function(){return this.each(function(){var firstChild=this.parentNode.firstChild;firstChild&&this.parentNode.insertBefore(this,firstChild)})};var getCorrelatePair=function(d){var currentHash;currentHash=d instanceof Object?d.dataSource:d;var originalNode=d3.selectAll(".dot-O").filter(function(d){return d.dataSource===currentHash}),modifiedNode=d3.selectAll(".dot-M").filter(function(d){return d.dataSource===currentHash});correlateRuns=[originalNode,modifiedNode],graphInteractionStart(correlateRuns)},graphInteractionStart=function(data){decorateSiblings(data),highlightPairs(),displayTooltip(data),showData(data)},graphInteractionStop=function(data){clearSiblings(data),unhighlightPairs(),hideTooltip(),clearData()},decorateSiblings=function(d){$scope.$emit("currentGraphTarget",d)},clearSiblings=function(d){$scope.$emit("clearGraphTarget",d)},highlightPairs=function(){d3.select(correlateRuns[0][0][0]).attr("cx"),d3.select(correlateRuns[0][0][0]).attr("cy");correlateRuns[0].moveToFront(),correlateRuns[1].moveToFront(),correlateRuns[0].attr("r",dotActiveRadius).style({"stroke-width":dotActiveStrokeWidth,stroke:dotActiveStrokeColor,fill:dotColorActive}).append("text","O").attr("font-size","3em").attr("color",correlateRunsTextColor).attr("x","200px").attr("y","50px"),correlateRuns[1].attr("r",dotActiveRadius).style({"stroke-width":dotActiveStrokeWidth,stroke:dotActiveStrokeColor,fill:dotColorActive})},unhighlightPairs=function(){correlateRuns[0].moveToBack(),correlateRuns[1].moveToBack(),correlateRuns[0].attr("r",dotRadius).style({"stroke-width":dotStrokeWidth,stroke:dotActiveStrokeColor,fill:dotColorOriginal}),correlateRuns[1].attr("r",dotRadius).style({"stroke-width":dotStrokeWidth,stroke:dotActiveStrokeColor,fill:dotColorModified}),correlateRuns=[]},tooltip=d3.select("#watermark").append("div").attr("class","watermark-tooltip").style("opacity",0),displayTooltip=function(data){var datapath=data[0][0][0].__data__;tooltip.transition().duration(animationDuration).style("opacity",1),tooltip.html('<div class=""><div class="pull-left label-total-storage"><strong>Total Storage (Both Runs):</strong></div><div class="pull-right"> '+datapath.value_O_heads+' ft</div><br/><div class="pull-left label-original-run"><strong>Original Total Pumping:</strong></div><div class="pull-right"> '+(datapath.value_O/cfsDenominator).toFixed(decimalLimit)+' cfs</div><br/><div class="pull-left label-modified-run"><strong>Modified Total Pumping:</strong></div><div class="pull-right"> '+(datapath.value_M/cfsDenominator).toFixed(decimalLimit)+' cfs</div><br/><div class="pull-left label-pumping-delta"><strong>Total Pumping Delta:</strong></div><div class="pull-right"> '+(datapath.value_O/cfsDenominator-datapath.value_M/cfsDenominator).toFixed(decimalLimit)+' cfs</div><br/><br/><div class="pull-left label-correlate-runs"><strong>Data Source:</strong></div><br/><div class="pull-right label-data-source"> '+datapath.dataSource+'</div><br/><br/><div class="zone-data"><strong>Pumping by Zones:</strong></div><div class="pull-left zone-data-label"><strong>Zone 1:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_1+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 2:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_2+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 3:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_3+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 4:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_4+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 5:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_5+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 6:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_6+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 7:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_7+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 8:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_8+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 9:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_9+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 10:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_10+'</div><br/><div class="pull-left zone-data-label"><strong>Zone 11:</strong></div><div class="pull-right zone-data-value"> '+datapath.Zone_11+"</div></div>").style("right",tooltipPosX+"px").style("top",tooltipPosY+"px")},hideTooltip=function(){tooltip.transition().duration(animationDuration).style("opacity",0)},showData=function(d){var dataSource=d[0][0][0].__data__.dataSource.toString();d3.select("#data-source").text(dataSource),d3.select("#total-storage-o").text(xValue_O(d[0].datum())),d3.select("#total-pumping-o").text(yValue_O(d[0].datum())),d3.select("#total-storage-m").text(xValue_M(d[0].datum())),d3.select("#total-pumping-m").text(yValue_M(d[0].datum())),d3.select("#zone1").text(d[0].datum().Zone_1),d3.select("#zone2").text(d[0].datum().Zone_2),d3.select("#zone3").text(d[0].datum().Zone_3),d3.select("#zone4").text(d[0].datum().Zone_4),d3.select("#zone5").text(d[0].datum().Zone_5),d3.select("#zone6").text(d[0].datum().Zone_6),d3.select("#zone7").text(d[0].datum().Zone_7),d3.select("#zone8").text(d[0].datum().Zone_8),d3.select("#zone9").text(d[0].datum().Zone_9),d3.select("#zone10").text(d[0].datum().Zone_10),d3.select("#zone11").text(d[0].datum().Zone_11)},clearData=function(){d3.select("#data-source").text(""),d3.select("#total-storage-o").text(""),d3.select("#total-pumping-o").text(""),d3.select("#total-storage-m").text(""),d3.select("#total-pumping-m").text(""),d3.select("#zone1").text(""),d3.select("#zone2").text(""),d3.select("#zone3").text(""),d3.select("#zone4").text(""),d3.select("#zone5").text(""),d3.select("#zone6").text(""),d3.select("#zone7").text(""),d3.select("#zone8").text(""),d3.select("#zone9").text(""),d3.select("#zone10").text(""),d3.select("#zone11").text("")};d3.json(graphData,function(error,data){data=graphData,data.forEach(function(d){d.dataSource=d[0],d.value_O=+d[1],d.value_O_heads=+d[4],d.value_M=+d[2],d.value_M_heads=+d[5],d.value_O_drains=+d[7],d.value_M_drains=+d[8],d.Zone_1=+d[10],d.Zone_2=+d[11],d.Zone_3=+d[12],d.Zone_4=+d[13],d.Zone_5=+d[14],d.Zone_6=+d[15],d.Zone_7=+d[16],d.Zone_8=+d[17],d.Zone_9=+d[18],d.Zone_10=+d[19],d.Zone_11=+d[20]}),xScale.domain([xScaleDomain_Lower,xScaleDomain_Upper]),yScale.domain([yScaleDomain_Lower,yScaleDomain_Upper]),canvas.append("g").attr("class","x axis").attr("transform","translate(0,"+(height-30)+")").call(xAxis).append("text").attr("x",width-50).attr("y",-10).style("text-anchor","end").style("fill","#FFC0A9").text("Total Pumping in ft3 (for entire model)").attr("class","x-axis-label"),canvas.append("g").attr("class","y axis").call(yAxis).append("text").attr("transform","rotate(-90)").attr("y",16).style("text-anchor","end").style("fill","#C9D787").text("Total Storage Volume in ft (monthly ave)").attr("class","y-axis-label"),canvas.selectAll(".dot_O").data(data).enter().append("circle").attr("class","dot-O").attr("r",dotRadius).attr("cx",xMap_O).attr("cy",yMap_O).style("fill",dotColorOriginal).style("stroke",dotStrokeColor).on("mouseover",getCorrelatePair).on("mouseout",graphInteractionStop),canvas.selectAll(".dot_M").data(data).enter().append("circle").attr("class","dot-M").attr("r",dotRadius).attr("cx",xMap_M).attr("cy",yMap_M).style("fill",dotColorModified).style("stroke",dotStrokeColor).on("mouseover",getCorrelatePair).on("mouseout",graphInteractionStop)}),d3.csv(aquiferContinuum_dataSource,function(error,data){data.forEach(function(d){d.Graph_Value=+d.Graph_Value,d.Value=+d.Value}),xScale.domain([xScaleDomain_Lower,xScaleDomain_Upper]),yScale.domain([yScaleDomain_Lower,yScaleDomain_Upper]);var continuum=canvas.selectAll("g").data(data).enter().append("g");continuum.append("svg:line").attr("class","aquifer-continuum").attr("x1",xMap_A).attr("y1",0).attr("x2",xMap_A).attr("y2",height-30).style("stroke-width",continuumStrokeWidth).style("stroke",continuumStrokeColor),continuum.append("text").attr("class","continuum-label").attr("x",xMap_A).attr("y",10).attr("transform","translate(2,-2)").style("fill",continuumTextFill).text(function(d){return d.Description})}),$rootScope.$on("newDatatableTarget",function(event,args){getCorrelatePair(args)}),$rootScope.$on("removeDatatableTarget",function(event,args){graphInteractionStop(args)})}var graph_dataSource=data,aquiferContinuum_dataSource="../../../../data/AquiferYield_ContinuumData_BartonSprings.csv",graphPanel=document.getElementById("panel-pm"),graphPanelWidth=graphPanel.offsetWidth,graphPanelHeight=graphPanel.offsetHeight,graphWidthScale=.95,graphHeightScale=.91,width=graphPanelWidth*graphWidthScale,height=graphPanelHeight*graphHeightScale;drawGraph(graph_dataSource)}}angular.module("analyze").controller("GraphViewController",GraphViewController),GraphViewController.$inject=["$rootScope","$scope","$state","$location","Authentication","graphConfig"]}(),function(){function MapViewController($scope,Authentication,mapConfig){function updateView(data){}$scope.authentication=Authentication,$scope.updateView=updateView,$scope.$on("analysisDataLoaded",function(event,args){$scope.mapConfig=mapConfig})}angular.module("analyze").controller("MapViewController",MapViewController),MapViewController.$inject=["$scope","Authentication","mapConfig"]}(),function(){function CoreRoutes($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/analyze","/analyze/layout").when("/formulations","/formulations/list").when("/datasets","/datasets/list").when("/models","/models/list").when("/publications","/publications/list").when("/profile","/profile/view").otherwise("/");var home_state={"abstract":!1,url:"/",controller:"HomeViewController",controllerAs:"home",data:{title:"Home"}},anon_state={"abstract":!1,url:"/index",templateUrl:"modules/core/views/anon.client.view.html",controller:"AnonViewController",controllerAs:"anon",data:{title:"Welcome"}};$stateProvider.state("home",home_state).state("anon",anon_state)}angular.module("core").config(CoreRoutes),CoreRoutes.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){function AnonViewController($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="default.client.view.html",$scope.logopath="/modules/core/img/brand/watermark_logo_20151223_v014c1_transparent.png",console.log($scope.currentRoute)}angular.module("core").controller("AnonViewController",AnonViewController),AnonViewController.$inject=["$scope","Authentication"]}(),function(){function StateConfig($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}function HeaderController($rootScope,$scope,Authentication,Menus){function toggleCollapsibleMenu(){$scope.isCollapsed=!$scope.isCollapsed}function changeNavIcon(){switch($rootScope.$state.current.data.title){case"Dashboard":$scope.current_icon="fa-desktop";break;case"Analyze":$scope.current_icon="fa-area-chart";break;case"Formulations":$scope.current_icon="fa-puzzle-piece";break;case"Data Sources":$scope.current_icon="fa-database";break;case"Models":$scope.current_icon="fa-cubes";break;case"Publications":$scope.current_icon="fa-newspaper-o";break;case"Profile":$scope.current_icon="fa-user";break;case"Documents":$scope.current_icon="fa-file-text";break;case"About":$scope.current_icon="fa-info-circle"}}$scope.authentication=Authentication,$scope.currentRoute="Navigation",$scope.toggleCollapsibleMenu=toggleCollapsibleMenu,$scope.changeNavIcon=changeNavIcon,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.current_icon="fa-desktop",$scope.appTitle="Watermark",$scope.versionNumber="Alpha v0.23.314",$scope.iconpath="/modules/core/img/brand/watermark_logo_20151223_v014c1_transparent.png",$scope.$on("$stateChangeSuccess",function(event){$scope.isCollapsed=!1,changeNavIcon()})}angular.module("core").run(StateConfig).controller("HeaderController",HeaderController),StateConfig.$inject=["$rootScope","$state","$stateParams"],HeaderController.$inject=["$rootScope","$scope","Authentication","Menus"]}(),function(){function HomeViewController($scope,Authentication,$state){$scope.authentication=Authentication,$scope.currentRoute="Home",""===$scope.authentication.user?$state.go("anon"):$state.go("dashboard")}angular.module("core").controller("HomeViewController",HomeViewController),HomeViewController.$inject=["$scope","Authentication","$state"]}(),function(){function Menus(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}angular.module("core").service("Menus",Menus),Menus.$inject=[]}(),function(){function DashboardRoutes($stateProvider){var dashboard_state={"abstract":!1,url:"/dashboard",templateUrl:"modules/dashboard/views/dashboard.client.view.html",controller:"DashboardViewController",controllerAs:"dashboard",data:{title:"Dashboard"}};$stateProvider.state("dashboard",dashboard_state)}angular.module("dashboard").config(DashboardRoutes),DashboardRoutes.$inject=["$stateProvider"]}(),function(){function DashboardViewController($scope,Authentication){function clicked(target){}$scope.authentication=Authentication,$scope.currentRoute="Dashboard",$scope.listDisplayLimit=9,$scope.clicked=clicked}angular.module("dashboard").controller("DashboardViewController",DashboardViewController),DashboardViewController.$inject=["$scope","Authentication"]}(),function(){function DatasetsRoutes($stateProvider){var datasets_state={"abstract":!1,url:"/datasets",templateUrl:"modules/datasets/views/datasets.client.view.html",controller:"DatasetsViewController",controllerAs:"datasetsView",data:{title:"Data Sources"}},datasets_list_state={"abstract":!1,url:"/list",templateUrl:"modules/datasets/views/list-datasets.client.view.html",controller:"DatasetsController",controllerAs:"datasets"},datasets_list_details_state={"abstract":!1,url:"/details/:datasetId",templateUrl:"modules/datasets/views/view-dataset.client.view.html",controller:"DatasetsController",controllerAs:"datasets"
},datasets_list_edit_state={"abstract":!1,url:"/edit/:datasetId",templateUrl:"modules/datasets/views/edit-dataset.client.view.html",controller:"DatasetsController",controllerAs:"datasets"},datasets_list_load_state={"abstract":!1,url:"/load",templateUrl:"modules/datasets/views/create-dataset.client.view.html",controller:"DatasetsController",controllerAs:"datasets"},datasets_list_transform_state={"abstract":!1,url:"/transform",templateUrl:"modules/datasets/views/datasets.transform.client.view.html",controller:"DatasetsTransformViewController",controllerAs:"datasetsTransform"},datasets_list_visualize_state={"abstract":!1,url:"/visualize",templateUrl:"modules/datasets/views/datasets.visualize.client.view.html",controller:"DatasetsVisualizeViewController",controllerAs:"datasetsVisualize"};$stateProvider.state("datasets",datasets_state).state("datasets.list",datasets_list_state).state("datasets.list.details",datasets_list_details_state).state("datasets.list.edit",datasets_list_edit_state).state("datasets.list.load",datasets_list_load_state).state("datasets.list.transform",datasets_list_transform_state).state("datasets.list.visualize",datasets_list_visualize_state)}angular.module("datasets").config(DatasetsRoutes),DatasetsRoutes.$inject=["$stateProvider"]}(),function(){function DatasetsController($scope,$state,$stateParams,$location,Authentication,Datasets,FileUploader){function create(){var dataset=new Datasets({name:this.name});dataset.$save(function(response){$state.go("datasets",{},{reload:!0}),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}function remove(dataset){if(dataset){dataset.$remove();for(var i in $scope.datasets)$scope.datasets[i]===dataset&&$scope.datasets.splice(i,1)}else $scope.dataset.$remove(function(){$state.go("datasets",{},{reload:!0})})}function update(){var dataset=$scope.dataset;dataset.$update(function(){$state.go("datasets.list",{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}function find(user){Datasets.query(function(datasets){$scope.datasets=user?datasets.filter(function(dataset){return dataset.user._id===user._id}):datasets})}function findOne(){$scope.dataset=Datasets.get({datasetId:$stateParams.datasetId})}function whatfiles(uploader){console.log(uploader.queue)}$scope.authentication=Authentication,$scope.currentRoute="Datasets",$scope.currentUser=Authentication.user,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne,$scope.whatfiles=whatfiles,$scope.newDataset={};var uploader=$scope.uploader=new FileUploader({url:"/uploads"});uploader.filters.push({name:"customFilter",fn:function(item,options){return this.queue.length<10}}),uploader.onWhenAddingFileFailed=function(item,filter,options){console.info("onWhenAddingFileFailed",item,filter,options)},uploader.onAfterAddingFile=function(fileItem){console.info("onAfterAddingFile",fileItem)},uploader.onAfterAddingAll=function(addedFileItems){console.info("onAfterAddingAll",addedFileItems)},uploader.onBeforeUploadItem=function(item){console.info("onBeforeUploadItem",item)},uploader.onProgressItem=function(fileItem,progress){console.info("onProgressItem",fileItem,progress)},uploader.onProgressAll=function(progress){console.info("onProgressAll",progress)},uploader.onSuccessItem=function(fileItem,response,status,headers){console.info("onSuccessItem",fileItem,response,status,headers)},uploader.onErrorItem=function(fileItem,response,status,headers){console.info("onErrorItem",fileItem,response,status,headers)},uploader.onCancelItem=function(fileItem,response,status,headers){console.info("onCancelItem",fileItem,response,status,headers)},uploader.onCompleteItem=function(fileItem,response,status,headers){console.info("onCompleteItem",fileItem,response,status,headers)},uploader.onCompleteAll=function(){console.info("onCompleteAll")}}angular.module("datasets").controller("DatasetsController",DatasetsController),DatasetsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Datasets","FileUploader"]}(),function(){function DatasetsViewController($scope,Authentication){function clicked(target){console.log(target)}$scope.authentication=Authentication,$scope.clicked=clicked}angular.module("core").controller("DatasetsViewController",DatasetsViewController),DatasetsViewController.$inject=["$scope","Authentication"]}(),angular.module("core").controller("DatasetsTransformViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="datasets.transform.client.view.html",console.log($scope.whoami)}]),angular.module("core").controller("DatasetsVisualizeViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="datasets.visualize.client.view.html",console.log($scope.whoami)}]),function(){function Datasets($resource){return $resource("datasets/:datasetId",{datasetId:"@_id"},{update:{method:"PUT"}})}angular.module("datasets").factory("Datasets",Datasets),Datasets.$inject=["$resource"]}(),function(){function bsDropdown($compile){return{restrict:"E",scope:{items:"=dropdownData",doSelect:"&selectVal",selectedItem:"=preselectedItem"},link:function(scope,element,attrs){var html="";switch(attrs.menuType){case"button":html+='<div class="btn-group"><button class="dropdown-toggle btn btn-primary default-global-transform drop-shadow" data-toggle="dropdown">Select Dataset <span class="caret rotate"></span></button>';break;default:html+='<div class="dropdown"><a class="dropdown-toggle" role="button" data-toggle="dropdown"  href="javascript:;">Dropdown<b class="caret"></b></a>'}html+='<ul class="dropdown-menu"><li ng-repeat="item in items"><a tabindex="-1" data-ng-click="selectVal(item)">{{item.name}}</a></li></ul></div>',element.append($compile(html)(scope));for(var i=0;i<scope.items.length;i++)if(scope.items[i].id===scope.selectedItem){scope.bSelectedItem=scope.items[i];break}scope.selectVal=function(item){switch(attrs.menuType){case"button":$("button.button-label",element).html(item.name);break;default:$("a.dropdown-toggle",element).html('<b class="caret"></b> '+item.name)}scope.doSelect({selectedVal:item.name})},scope.selectVal(scope.bSelectedItem)}}}angular.module("mcsdss.directives").directive("bsDropdown",bsDropdown),bsDropdown.$inject=["$compile"]}(),function(){function FileModel($parse){function postLink(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}var directiveDefinitionObject={restrict:"A"};return directiveDefinitionObject.link=postLink,directiveDefinitionObject}angular.module("mcsdss.directives").directive("fileModel",FileModel),FileModel.$inject=["$parse"]}(),function(){function LeafletMap($rootScope){var directiveDefinitionObject={compile:!1,controller:!1,controllerAs:!1,link:!1,priority:0,require:!1,restrict:"E",scope:{},template:!1,templateUrl:!1,terminal:!1,transclude:!1,type:!1};return directiveDefinitionObject.link=function(scope,element){var mqLink='<a href="http://www.mapquest.com/">MapQuest</a>',mqPic='<img src="http://developer.mapquest.com/content/osm/mq_logo.png">',mqArialUrl="http://otile{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.jpg",mqosmUrl="http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpg",mqArialAttrib="Tiles courtesy of "+mqLink+mqPic,mqosmAttrib="Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency. Tiles courtesy of "+mqLink+mqPic,mqArialMap=L.tileLayer(mqArialUrl,{attribution:mqArialAttrib,subdomains:"1234"}),mqosmMap=L.tileLayer(mqosmUrl,{attribution:mqosmAttrib,subdomains:"1234"}),osmLink='<a href="http://openstreetmap.org">OpenStreetMap</a>',osmUrl="http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",osmAttrib="&copy; "+osmLink+" Contributors",osmMap=L.tileLayer(osmUrl,{attribution:osmAttrib}),osmBwLink='<a href="http://openstreetmap.org">OpenStreetMap</a>',osmBwUrl="http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png",osmBwAttrib="&copy; "+osmBwLink+" Contributors",thunLink=(L.tileLayer(osmBwUrl,{attribution:osmBwAttrib}),'<a href="http://thunderforest.com/">Thunderforest</a>'),thunLandscapeUrl="http://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png",thunOutdoorsUrl="http://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png",thunAttrib="&copy; "+osmLink+" Contributors & "+thunLink,thunLandscapeMap=L.tileLayer(thunLandscapeUrl,{attribution:thunAttrib}),thunOutdoorsMap=L.tileLayer(thunOutdoorsUrl,{attribution:thunAttrib}),stamenLink='<a href="http://stamen.com">Stamen Design</a>',stamenUrl="http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg",stamenAttrib="&copy; "+mqLink+" Contributors & "+stamenLink,stamenMap=L.tileLayer(stamenUrl,{attribution:stamenAttrib}),esriLink='<a href="http://www.esri.com/">Esri</a>',esriWhoLink="i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community",esriUrl="http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",esriAttrib="&copy; "+esriLink+", "+esriWhoLink,esriMap=L.tileLayer(esriUrl,{attribution:esriAttrib}),color_black="#000000",color_grey="#4D4B5B",color_eaa_Orange="#AB650D",color_eaa_Orange="#D15B05",weight=1,opacity=1,fillOpacity=.6,fillOpacityHover=.8,baseStyle={clickable:!0,color:color_black,fillColor:color_grey,weight:weight,opacity:opacity,fillOpacity:fillOpacity},baseStyleHover={fillOpacity:fillOpacityHover},usaStyle={},usaStyleHover={},texasStyle={fillColor:color_eaa_Orange},texasStyleHover={},majorAquiferStyle={},majorAquiferStyleHover={},eaaBoundaryZonesStyle={},eaaBoundaryZonesStyleHover={},aquiferZonesStyle={},aquiferZonesStyleHover={},bsgamZonesStyle={},bsgamZonesStyleHover={},bsgamZonesMergedStyle={},bsgamZonesMergedStyleHover={},usaGeojson="./data/geojson/USA.geo.json",texasGeojson="./data/geojson/TX.geo.json",majorAquifersGeojson="./data/geojson/NEW_major_aquifers_dd_reduced100.geo.json",eaaBoundaryZonesGeojson="./data/geojson/eaa_boundary_EPSG-3081.geo.json",aquiferZonesGeojson="./data/geojson/eaa-aquifer-zones-2014.geo.json",bsgam_kzonesGeojson="./data/geojson/BSGAMKZ.geo.json",bsgam_kzones_mergedGeojson="./data/geojson/BSGAMKZones.merged.WGS84.lco15.geo.json",usaLayer=new L.LayerGroup,texasLayer=new L.LayerGroup,majorAquifersLayer=new L.LayerGroup,aquiferZonesLayer=new L.LayerGroup,eaaBoundaryLayer=new L.LayerGroup,bsgam_kzonesLayer=new L.LayerGroup,bsgam_kzones_mergedLayer=new L.LayerGroup,mergeObjects=(new L.LayerGroup,function(){for(var o={},i=arguments.length-1;i>=0;i--){var s=arguments[i];for(var k in s)o[k]=s[k]}return o}),geojsonHandler=function(feature,layer,style,styleHover){if(feature.properties){var popupString='<div class="popup">',layerClassName={};for(var k in feature.properties){var v=feature.properties[k];popupString+=k+": "+v+"<br />",layerClassName=k+"-"+v}popupString+="</div>",layer.bindPopup(popupString),layer.setStyle({className:layerClassName})}layer instanceof L.Point||(layer.on("mouseover",function(){var thisStyleHover=mergeObjects(styleHover,baseStyleHover);layer.setStyle(thisStyleHover)}),layer.on("mouseout",function(){var thisStyle=mergeObjects(style,baseStyle);layer.setStyle(thisStyle)}))},processGeojson=function(data,layerGroup,layerStyle,layerStyleHover){var geojson=L.geoJson(data,{style:function(feature,layer){var thisStyle=mergeObjects(layerStyle,baseStyle);return thisStyle},onEachFeature:function(feature,layer){geojsonHandler(feature,layer,layerStyle,layerStyleHover)}});geojson.addTo(layerGroup)};$.getJSON(usaGeojson,function(data){processGeojson(data,usaLayer,usaStyle,usaStyleHover)}),$.getJSON(texasGeojson,function(data){processGeojson(data,texasLayer,texasStyle,texasStyleHover)}),$.getJSON(majorAquifersGeojson,function(data){processGeojson(data,majorAquifersLayer,majorAquiferStyle,majorAquiferStyleHover)}),$.getJSON(aquiferZonesGeojson,function(data){processGeojson(data,aquiferZonesLayer,aquiferZonesStyle,aquiferZonesStyleHover)}),$.getJSON(eaaBoundaryZonesGeojson,function(data){var geojson=L.geoJson(data,{style:function(feature,layer){var thisStyle=mergeObjects(eaaBoundaryZonesStyle,baseStyle);return thisStyle},onEachFeature:function(feature,layer){var popupString='<div class="popup">Edwards Aquifer Association Boundary Zone</div>';layer.bindPopup(popupString),layer instanceof L.Point||(layer.on("mouseover",function(){var eaaStyleHover=mergeObjects(eaaBoundaryZonesStyleHover,baseStyleHover);layer.setStyle(eaaStyleHover)}),layer.on("mouseout",function(){var eaaStyle=mergeObjects(eaaBoundaryZonesStyle,baseStyle);layer.setStyle(eaaStyle)}))}});geojson.addTo(eaaBoundaryLayer)}),$.getJSON(bsgam_kzonesGeojson,function(data){processGeojson(data,bsgam_kzonesLayer,bsgamZonesStyle,bsgamZonesStyleHover)}),$.getJSON(bsgam_kzones_mergedGeojson,function(data){processGeojson(data,bsgam_kzones_mergedLayer,bsgamZonesMergedStyle,bsgamZonesMergedStyleHover)});var getColor=function(d){return d>=2?"#400026":d>1.8?"#800026":d>1.6?"#BD0026":d>1.4?"#E31A1C":d>1.2?"#FC4E2A":d>1?"#FD8D3C":d>.8?"#FEB24C":d>.6?"#FED976":d>.4?"#FFEDA0":d>.2?"#FFFEBA":"#FFFFFF"},encodeZones=function(d){$(".Kzone-1")[0].style.fill=getColor(d[0][0][0].__data__.Zone_1),$(".Kzone-2")[0].style.fill=getColor(d[0][0][0].__data__.Zone_2),$(".Kzone-3")[0].style.fill=getColor(d[0][0][0].__data__.Zone_3),$(".Kzone-4")[0].style.fill=getColor(d[0][0][0].__data__.Zone_4),$(".Kzone-5")[0].style.fill=getColor(d[0][0][0].__data__.Zone_5),$(".Kzone-6")[0].style.fill=getColor(d[0][0][0].__data__.Zone_6),$(".Kzone-7")[0].style.fill=getColor(d[0][0][0].__data__.Zone_7),$(".Kzone-8")[0].style.fill=getColor(d[0][0][0].__data__.Zone_8),$(".Kzone-9")[0].style.fill=getColor(d[0][0][0].__data__.Zone_9),$(".Kzone-10")[0].style.fill=getColor(d[0][0][0].__data__.Zone_10),$(".Kzone-11")[0].style.fill=getColor(d[0][0][0].__data__.Zone_11)},decodeZones=function(){$(".Kzone-1")[0].style.fill=color_grey,$(".Kzone-2")[0].style.fill=color_grey,$(".Kzone-3")[0].style.fill=color_grey,$(".Kzone-4")[0].style.fill=color_grey,$(".Kzone-5")[0].style.fill=color_grey,$(".Kzone-6")[0].style.fill=color_grey,$(".Kzone-7")[0].style.fill=color_grey,$(".Kzone-8")[0].style.fill=color_grey,$(".Kzone-9")[0].style.fill=color_grey,$(".Kzone-10")[0].style.fill=color_grey,$(".Kzone-11")[0].style.fill=color_grey},baseLayers={"MapQuest Open Arial":mqArialMap,"MapQuest-OSM":mqosmMap,"Open Street Map":osmMap,"ESRI World Imagery":esriMap,"Thunderforest Landscape":thunLandscapeMap,"Thunderforest Outdoors":thunOutdoorsMap,"Stamen Watercolor":stamenMap},overlays={"Major Aquifers":majorAquifersLayer,"Aquifer Zones":aquiferZonesLayer,"bsgam kzones":bsgam_kzonesLayer,"bsgam kzones merged":bsgam_kzones_mergedLayer},panOptionsInitial={animate:!0,duration:3,easeLinearity:.5,noMoveStart:"false"},targetPosition=(new L.Point(-350,0),[30.15,-97.85]),initialZoom=11,offsetConstant=10,baseOffset=offsetConstant/initialZoom,initialPanLatOffset=targetPosition[0],initialPanLonOffset=targetPosition[1]-baseOffset,initialPosition=[initialPanLatOffset,initialPanLonOffset],map=L.map("map",{zoomControl:!1,attributionControl:!1,inertia:!1,keyboard:!0,dragging:!0,scrollWheelZoom:!0,zoomAnimation:!0,click:!0,layers:[thunOutdoorsMap]}).setView(initialPosition,initialZoom);map.on("popupopen",function(centerMarker){var cM=map.project(centerMarker.popup._latlng);cM.y-=centerMarker.popup._container.clientHeight/2;var cZ=map.getZoom();map.setView(map.unproject(cM),cZ,{animate:!0})}),L.Browser.touch=!0,L.Icon.Default.imagePath="./styles/images",L.control.zoom({position:"topleft"}).addTo(map),L.control.scale({position:"bottomleft"}).addTo(map),L.control.layers(baseLayers,overlays,{position:"topright"}).addTo(map),L.control.attribution({position:"bottomright"}).addTo(map),bsgam_kzones_mergedLayer.addTo(map),map.panTo(targetPosition,panOptionsInitial),$rootScope.$on("addMapTarget",function(event,args){map.hasLayer(bsgam_kzones_mergedLayer)&&encodeZones(args)}),$rootScope.$on("removeMapTarget",function(event,args){map.hasLayer(bsgam_kzones_mergedLayer)&&decodeZones()})},directiveDefinitionObject}angular.module("mcsdss.directives").directive("leafletMap",LeafletMap),LeafletMap.$inject=["$rootScope"]}(),function(){function DocumentationRoutes($stateProvider){var documentation_state={"abstract":!1,url:"/documentation",templateUrl:"modules/documentation/views/documentation.client.view.html",controller:"DocumentationViewController",controllerAs:"documentation",data:{title:"Documents"}};$stateProvider.state("documentation",documentation_state)}angular.module("documentation").config(DocumentationRoutes),DocumentationRoutes.$inject=["$stateProvider"]}(),function(){function DocumentationViewController($scope,Authentication){function clicked(target){}$scope.authentication=Authentication,$scope.currentRoute="Documentation",$scope.clicked=clicked}angular.module("documentation").controller("DocumentationViewController",DocumentationViewController),DocumentationViewController.$inject=["$scope","Authentication"]}(),function(){function FormulationsRoutes($stateProvider){var formulations_state={"abstract":!1,url:"/formulations",templateUrl:"modules/formulations/views/formulations.client.view.html",controller:"FormulationsViewController",controllerAs:"formulationsView",data:{title:"Formulations"}},formulations_list_state={"abstract":!1,url:"/list",templateUrl:"modules/formulations/views/list-formulations.client.view.html",controller:"FormulationsController",controllerAs:"formulations"},formulations_list_details_state={"abstract":!1,url:"/details/:formulationId",templateUrl:"modules/formulations/views/view-formulation.client.view.html",controller:"FormulationsController",controllerAs:"formulations"},formulations_list_edit_state={"abstract":!1,url:"/edit/:formulationId",templateUrl:"modules/formulations/views/edit-formulation.client.view.html",controller:"FormulationsController",controllerAs:"formulations"},formulations_list_load_state={"abstract":!1,url:"/load",templateUrl:"modules/formulations/views/create-formulation.client.view.html",controller:"FormulationsController",controllerAs:"formulations"};$stateProvider.state("formulations",formulations_state).state("formulations.list",formulations_list_state).state("formulations.list.details",formulations_list_details_state).state("formulations.list.edit",formulations_list_edit_state).state("formulations.list.load",formulations_list_load_state)}angular.module("formulations").config(FormulationsRoutes),FormulationsRoutes.$inject=["$stateProvider"]}(),function(){function FormulationsController($scope,$state,$stateParams,$location,Authentication,Formulations){function create(){var formulation=new Formulations({name:this.name});formulation.$save(function(response){$state.go("formulations",{},{reload:!0}),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}function remove(formulation){if(formulation){formulation.$remove();for(var i in $scope.formulations)$scope.formulations[i]===formulation&&$scope.formulations.splice(i,1)}else $scope.formulation.$remove(function(){$state.go("formulations",{},{reload:!0})})}function update(){var formulation=$scope.formulation;formulation.$update(function(){$state.go("formulations.list",{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}function find(user){Formulations.query(function(formulations){$scope.formulations=user?formulations.filter(function(formulation){return formulation.user._id===user._id}):formulations})}function findOne(){$scope.formulation=Formulations.get({formulationId:$stateParams.formulationId})}$scope.authentication=Authentication,$scope.currentRoute="Formulations",$scope.currentUser=Authentication.user,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne}angular.module("formulations").controller("FormulationsController",FormulationsController),FormulationsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Formulations"]}(),angular.module("core").controller("FormulationsViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.clicked=function(target){console.log(target)}}]),function(){function Formulations($resource){return $resource("formulations/:formulationId",{formulationId:"@_id"},{update:{method:"PUT"}})}angular.module("formulations").factory("Formulations",Formulations),Formulations.$inject=["$resource"]}(),function(){function InformationRoutes($stateProvider){var information_state={"abstract":!1,url:"/information",templateUrl:"modules/information/views/information.client.view.html",controller:"InformationViewController",controllerAs:"informationView",data:{title:"Information"}},information_about_state={"abstract":!1,url:"/about",templateUrl:"modules/information/views/about.information.client.view.html",controller:"AboutInformationViewController",controllerAs:"informationAboutView",data:{title:"About"}};$stateProvider.state("information",information_state).state("information.about",information_about_state)}angular.module("information").config(InformationRoutes),InformationRoutes.$inject=["$stateProvider"]}(),function(){function AboutInformationViewController($scope,Authentication){function clicked(target){}$scope.authentication=Authentication,$scope.appTitle="Watermark",$scope.versionNumber="Alpha v0.23.314",$scope.logopath="/modules/core/img/brand/watermark_logo_20151223_v014c1_transparent.png",$scope.currentRoute="About",$scope.clicked=clicked}angular.module("information").controller("AboutInformationViewController",AboutInformationViewController),AboutInformationViewController.$inject=["$scope","Authentication"]}(),function(){function InformationViewController($scope,Authentication){function clicked(target){}$scope.authentication=Authentication,$scope.currentRoute="Information",$scope.clicked=clicked}angular.module("information").controller("InformationViewController",InformationViewController),InformationViewController.$inject=["$scope","Authentication"]}(),function(){function ModelsRoutes($stateProvider){var models_state={"abstract":!1,url:"/models",templateUrl:"modules/models/views/models.client.view.html",controller:"ModelsViewController",controllerAs:"modelsView",data:{title:"Models"}},models_list_state={"abstract":!1,url:"/list",templateUrl:"modules/models/views/list-models.client.view.html",controller:"ModelsController",controllerAs:"models"},models_list_details_state={"abstract":!1,url:"/details/:modelId",templateUrl:"modules/models/views/view-model.client.view.html",controller:"ModelsController",controllerAs:"models"},models_list_edit_state={"abstract":!1,url:"/edit/:modelId",templateUrl:"modules/models/views/edit-model.client.view.html",controller:"ModelsController",controllerAs:"models"},models_list_load_state={"abstract":!1,url:"/load",templateUrl:"modules/models/views/create-model.client.view.html",controller:"ModelsController",controllerAs:"models"},models_list_design_state={"abstract":!1,url:"/design",templateUrl:"modules/models/views/models.design.client.view.html",controller:"ModelsDesignViewController",controllerAs:"modelsDesign"};$stateProvider.state("models",models_state).state("models.list",models_list_state).state("models.list.details",models_list_details_state).state("models.list.edit",models_list_edit_state).state("models.list.load",models_list_load_state).state("models.list.design",models_list_design_state)}angular.module("models").config(ModelsRoutes),ModelsRoutes.$inject=["$stateProvider"]}(),function(){function ModelsController($scope,$state,$stateParams,$location,Authentication,Models){function create(){var model=new Models({name:this.name});model.$save(function(response){$state.go("models",{},{reload:!0}),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}function remove(model){if(model){model.$remove();for(var i in $scope.models)$scope.models[i]===model&&$scope.models.splice(i,1)}else $scope.model.$remove(function(){$state.go("models",{},{reload:!0})})}function update(){var model=$scope.model;model.$update(function(){$state.go("models.list",{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}function find(user){Models.query(function(models){$scope.models=user?models.filter(function(model){return model.user._id===user._id}):models})}function findOne(){$scope.model=Models.get({modelId:$stateParams.modelId})}$scope.authentication=Authentication,$scope.currentRoute="Models",$scope.currentUser=Authentication.user,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne}angular.module("models").controller("ModelsController",ModelsController),ModelsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Models"]}(),angular.module("core").controller("ModelsViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.clicked=function(target){console.log(target)}}]),angular.module("core").controller("ModelsCurateViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="models.curate.client.view",$scope.clicked=function(target){console.log(target)}}]),angular.module("core").controller("ModelsDesignViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="models.design.client.view",$scope.clicked=function(target){console.log(target)}}]),angular.module("core").controller("ModelsPublishViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="models.publish.client.view",$scope.clicked=function(target){console.log(target)}}]),function(){function Models($resource){return $resource("models/:modelId",{modelId:"@_id"},{update:{method:"PUT"}})}angular.module("models").factory("Models",Models),Models.$inject=["$resource"]}(),function(){function AnalysisDataFactory($q,$http,$log,$resource){return $resource("https://api.github.com/repos/:username/:repo/issues",{state:"open"},{query:{method:"GET",isArray:!0}})}angular.module("mcsdss.providers").factory("AnalysisDataFactory",AnalysisDataFactory),AnalysisDataFactory.$inject=["$q","$http","$log","$resource"]}(),function(){function httpqFactory($http,$q){return{get:function(){var deferred=$q.defer();return $http.get.apply(null,arguments).success(deferred.resolve).error(deferred.resolve),deferred.promise}}}angular.module("mcsdss.providers").factory("httpq",httpqFactory),httpqFactory.$inject=["$http","$q"]}(),function(){function FormulationRetrieval($http,$q){var currentFormulation=null,analysisConfig=null,maufConfig=null,datagridConfig=null,graphConfig=null,mapConfig=null;return FormulationRetrieval.getFormulation=function(target){var deferred=$q.defer();if(null===currentFormulation){var promise=$http.get(target).then(function(response){var d=new Date;d.getTime();return currentFormulation=FormulationRetrieval.configureFormulation(response.data)})["finally"](function(){var d=new Date;d.getTime()});return promise}return deferred.resolve(currentFormulation),deferred.promise},FormulationRetrieval.getAnalysisConfig=function(fc){return FormulationRetrieval.setConfigurationData(fc.analysisConfig,analysisConfig)},FormulationRetrieval.getMaufConfig=function(fc){return FormulationRetrieval.setConfigurationData(fc.maufConfig,maufConfig)},FormulationRetrieval.getGraphConfig=function(fc){return FormulationRetrieval.setConfigurationData(fc.graphConfig,graphConfig)},FormulationRetrieval.getDatagridConfig=function(fc){return FormulationRetrieval.setConfigurationData(fc.datagridConfig,datagridConfig)},FormulationRetrieval.getMapConfig=function(fc){return FormulationRetrieval.setConfigurationData(fc.mapConfig,mapConfig)},FormulationRetrieval.configureFormulation=function(f){return FormulationRetrieval.formulationContainer=f,FormulationRetrieval.loadFormulationSourceData(FormulationRetrieval.formulationContainer),FormulationRetrieval.loadFormulationGisData(FormulationRetrieval.formulationContainer),FormulationRetrieval.formulationContainer},FormulationRetrieval.loadFormulationSourceData=function(fc){function parseFormulationDatasource(fd,destination){Papa.parse(fd,{complete:function(results){destination.datum=results.data}})}function loadData(target){var promise=$http.get(target.source).then(function(response){var d=new Date;d.getTime();return parseFormulationDatasource(response.data,target)})["finally"](function(){var d=new Date;d.getTime()});return promise}var datasources=[fc.datagridConfig.datasources.tabledata,fc.graphConfig.datasources.graphdata,fc.graphConfig.datasources.graphContextData];angular.forEach(datasources,loadData)},FormulationRetrieval.loadFormulationGisData=function(fc){function loadGeodata(target){angular.forEach(target,function(value,key){var promise=$http.get(value.source).then(function(response){return value.datum=response.data,value.datum})["finally"](function(){var d=new Date;d.getTime()});return promise})}var datasources=[fc.mapConfig.datasources.geojson];angular.forEach(datasources,loadGeodata)},FormulationRetrieval.setConfigurationData=function(source,targetConfig){var deferred=$q.defer();return null===targetConfig?targetConfig=source:(deferred.resolve(targetConfig),deferred.promise)},FormulationRetrieval}angular.module("mcsdss.providers").factory("FormulationRetrieval",FormulationRetrieval),FormulationRetrieval.$inject=["$http","$q"]}(),function(){function TestDeferFactory($q){return TestDeferFactory.getTested=function(){var deferred=$q.defer();console.log("deferred object created."),deferred.promise.then(console.log("resolving deferred promise in then() block."),function(result){console.log("promise success!")},function(error){console.log("promise error!")}),console.log("resolving deferred object via resolve()."),deferred.resolve(),console.log("returning deffered promise resolve.")},TestDeferFactory}angular.module("mcsdss.providers").factory("TestDeferFactory",TestDeferFactory),TestDeferFactory.$inject=["$q"]}(),function(){function TestFactory($http){var helloFactory="hello TestFactory!",goodbyeFactory="goodbye TestFactory!";return{helloFactory:helloFactory,goodbyeFactory:goodbyeFactory}}angular.module("mcsdss.providers").factory("TestFactory",TestFactory),TestFactory.$inject=["$http"]}(),function(){function multipartForm($scope,$http){$scope.post=function(uploadUrl,data){var fd=new FormData;for(var key in data)fd.append(key,data[key]);$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}angular.module("mcsdss.providers").service("multipartForm",multipartForm),multipartForm.$inject=["$scope","$http"]}(),function(){function PublicationsRoutes($stateProvider){var publications_state={"abstract":!1,url:"/publications",templateUrl:"modules/publications/views/publications.client.view.html",controller:"PublicationsViewController",controllerAs:"publicationsView",data:{title:"Publications"}},publications_list_state={"abstract":!1,url:"/list",templateUrl:"modules/publications/views/list-publications.client.view.html",controller:"PublicationsController",controllerAs:"publications"},publications_list_details_state={"abstract":!1,url:"/details/:publicationId",templateUrl:"modules/publications/views/view-publication.client.view.html",controller:"PublicationsController",controllerAs:"publications"},publications_list_edit_state={"abstract":!1,url:"/edit/:publicationId",templateUrl:"modules/publications/views/edit-publication.client.view.html",controller:"PublicationsController",controllerAs:"publications"},publications_list_load_state={"abstract":!1,url:"/load",templateUrl:"modules/publications/views/create-publication.client.view.html",controller:"PublicationsController",controllerAs:"publications"},publications_list_curate_state={"abstract":!1,url:"/curate",
templateUrl:"modules/publications/views/edit-publication.client.view.html",controller:"PublicationsController",controllerAs:"publications"},publications_list_publish_state={"abstract":!1,url:"/publish",templateUrl:"modules/publications/views/publications.publish.client.view.html",controller:"PublicationsPublishViewController",controllerAs:"publicationsPublish"};$stateProvider.state("publications",publications_state).state("publications.list",publications_list_state).state("publications.list.details",publications_list_details_state).state("publications.list.edit",publications_list_edit_state).state("publications.list.load",publications_list_load_state).state("publications.list.curate",publications_list_curate_state).state("publications.list.publish",publications_list_publish_state)}angular.module("publications").config(PublicationsRoutes),PublicationsRoutes.$inject=["$stateProvider"]}(),function(){function PublicationsController($scope,$state,$stateParams,$location,Authentication,Publications){function create(){var publication=new Publications({name:this.name});publication.$save(function(response){$state.go("publications",{},{reload:!0}),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}function remove(publication){if(publication){publication.$remove();for(var i in $scope.publications)$scope.publications[i]===publication&&$scope.publications.splice(i,1)}else $scope.publication.$remove(function(){$state.go("publications",{},{reload:!0})})}function update(){var publication=$scope.publication;publication.$update(function(){$state.go("publications.list",{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}function find(user){Publications.query(function(publications){$scope.publications=user?publications.filter(function(publication){return publication.user._id===user._id}):publications})}function findOne(){$scope.publication=Publications.get({publicationId:$stateParams.publicationId})}$scope.authentication=Authentication,$scope.currentRoute="Publications",$scope.currentUser=Authentication.user,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne}angular.module("publications").controller("PublicationsController",PublicationsController),PublicationsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Publications"]}(),angular.module("core").controller("PublicationsViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.clicked=function(target){console.log(target)}}]),angular.module("core").controller("PublicationsCurateViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="publications.curate.client.view",$scope.clicked=function(target){console.log(target)}}]),angular.module("core").controller("PublicationsPublishViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.whoami="publications.publish.client.view",$scope.clicked=function(target){console.log(target)}}]),function(){function Publications($resource){return $resource("publications/:publicationId",{publicationId:"@_id"},{update:{method:"PUT"}})}angular.module("publications").factory("Publications",Publications),Publications.$inject=["$resource"]}(),function(){function UsersConfig($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}angular.module("users").config(UsersConfig),UsersConfig.$inject=["$httpProvider"]}(),function(){function UsersRoutes($stateProvider){var signup_state={url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"authorize"},signin_state={url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"authorize"},forgot_state={url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"password"},reset_invalid_state={url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"},reset_success_state={url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"},reset_state={url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"password"},signout_state={url:"/auth/signout"},profile_state={"abstract":!1,url:"/profile",templateUrl:"modules/users/views/profile.client.view.html",controller:"ProfileViewController",controllerAs:"profileView",data:{title:"Profile"}},profile_view_state={"abstract":!1,url:"/view",templateUrl:"modules/users/views/settings/view-profile.client.view.html",controller:"SettingsController",controllerAs:"settings"},profile_edit_state={"abstract":!1,url:"/edit",templateUrl:"modules/users/views/settings/edit-profile.client.view.html",controller:"SettingsController",controllerAs:"settings"},profile_accounts_state={"abstract":!1,url:"/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html",controller:"SettingsController",controllerAs:"settings"},profile_password_state={"abstract":!1,url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html",controller:"SettingsController",controllerAs:"settings"};$stateProvider.state("signup",signup_state).state("signin",signin_state).state("forgot",forgot_state).state("reset-invalid",reset_invalid_state).state("reset-success",reset_success_state).state("reset",reset_state).state("signout",signout_state).state("profile",profile_state).state("profile.view",profile_view_state).state("profile.edit",profile_edit_state).state("profile.accounts",profile_accounts_state).state("profile.password",profile_password_state)}angular.module("users").config(UsersRoutes),UsersRoutes.$inject=["$stateProvider"]}(),function(){function AuthenticationController($scope,$http,$location,Authentication){function signup(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}function signin(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}$scope.authentication=Authentication,$scope.signup=signup,$scope.signin=signin,$scope.authentication.user&&$location.path("/")}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$http","$location","Authentication"]}(),function(){function PasswordController($scope,$stateParams,$http,$location,Authentication){function askForPasswordReset(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})}function resetUserPassword(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}$scope.authentication=Authentication,$scope.askForPasswordReset=askForPasswordReset,$scope.resetUserPassword=resetUserPassword,$scope.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","$http","$location","Authentication"]}(),angular.module("core").controller("ProfileViewController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.currentRoute="Profile",$scope.clicked=function(target){console.log(target)}}]),function(){function SettingsController($scope,$http,$location,Users,Authentication){function hasConnectedAdditionalSocialAccounts(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1}function isConnectedSocialAccount(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]}function removeUserSocialAccount(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}function updateUserProfile(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}function changeUserPassword(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=hasConnectedAdditionalSocialAccounts,$scope.isConnectedSocialAccount=isConnectedSocialAccount,$scope.removeUserSocialAccount=removeUserSocialAccount,$scope.updateUserProfile=updateUserProfile,$scope.changeUserPassword=changeUserPassword,$scope.user||$location.path("/")}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","$http","$location","Users","Authentication"]}(),function(){function Authentication(){var _this=this;return _this._data={user:window.user},_this._data}angular.module("users").factory("Authentication",Authentication)}(),function(){function Users($resource){return $resource("users",{},{update:{method:"PUT"}})}angular.module("users").factory("Users",Users),Users.$inject=["$resource"]}();